// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.hakilisoft.asuivre.operations.web;

import com.hakilisoft.asuivre.operations.domain.OAGroup;
import com.hakilisoft.asuivre.operations.domain.OATenant;
import com.hakilisoft.asuivre.operations.domain.OAUser;
import com.hakilisoft.asuivre.operations.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<OAGroup, String> ApplicationConversionServiceFactoryBean.getOAGroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.hakilisoft.asuivre.operations.domain.OAGroup, java.lang.String>() {
            public String convert(OAGroup oAGroup) {
                return new StringBuilder().append(oAGroup.getName()).append(' ').append(oAGroup.getDescription()).append(' ').append(oAGroup.getTenantBusinessKey()).append(' ').append(oAGroup.getCreationDate()).toString();
            }
        };
    }
    
    public Converter<Long, OAGroup> ApplicationConversionServiceFactoryBean.getIdToOAGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.hakilisoft.asuivre.operations.domain.OAGroup>() {
            public com.hakilisoft.asuivre.operations.domain.OAGroup convert(java.lang.Long id) {
                return OAGroup.findOAGroup(id);
            }
        };
    }
    
    public Converter<String, OAGroup> ApplicationConversionServiceFactoryBean.getStringToOAGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.hakilisoft.asuivre.operations.domain.OAGroup>() {
            public com.hakilisoft.asuivre.operations.domain.OAGroup convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), OAGroup.class);
            }
        };
    }
    
    public Converter<OATenant, String> ApplicationConversionServiceFactoryBean.getOATenantToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.hakilisoft.asuivre.operations.domain.OATenant, java.lang.String>() {
            public String convert(OATenant oATenant) {
                return new StringBuilder().append(oATenant.getName()).append(' ').append(oATenant.getBusinessKey()).append(' ').append(oATenant.getCreationDate()).append(' ').append(oATenant.getModificationDate()).toString();
            }
        };
    }
    
    public Converter<Long, OATenant> ApplicationConversionServiceFactoryBean.getIdToOATenantConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.hakilisoft.asuivre.operations.domain.OATenant>() {
            public com.hakilisoft.asuivre.operations.domain.OATenant convert(java.lang.Long id) {
                return OATenant.findOATenant(id);
            }
        };
    }
    
    public Converter<String, OATenant> ApplicationConversionServiceFactoryBean.getStringToOATenantConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.hakilisoft.asuivre.operations.domain.OATenant>() {
            public com.hakilisoft.asuivre.operations.domain.OATenant convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), OATenant.class);
            }
        };
    }
    
    public Converter<OAUser, String> ApplicationConversionServiceFactoryBean.getOAUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.hakilisoft.asuivre.operations.domain.OAUser, java.lang.String>() {
            public String convert(OAUser oAUser) {
                return new StringBuilder().append(oAUser.getUserName()).append(' ').append(oAUser.getFirstName()).append(' ').append(oAUser.getLastName()).append(' ').append(oAUser.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, OAUser> ApplicationConversionServiceFactoryBean.getIdToOAUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.hakilisoft.asuivre.operations.domain.OAUser>() {
            public com.hakilisoft.asuivre.operations.domain.OAUser convert(java.lang.Long id) {
                return OAUser.findOAUser(id);
            }
        };
    }
    
    public Converter<String, OAUser> ApplicationConversionServiceFactoryBean.getStringToOAUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.hakilisoft.asuivre.operations.domain.OAUser>() {
            public com.hakilisoft.asuivre.operations.domain.OAUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), OAUser.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getOAGroupToStringConverter());
        registry.addConverter(getIdToOAGroupConverter());
        registry.addConverter(getStringToOAGroupConverter());
        registry.addConverter(getOATenantToStringConverter());
        registry.addConverter(getIdToOATenantConverter());
        registry.addConverter(getStringToOATenantConverter());
        registry.addConverter(getOAUserToStringConverter());
        registry.addConverter(getIdToOAUserConverter());
        registry.addConverter(getStringToOAUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
